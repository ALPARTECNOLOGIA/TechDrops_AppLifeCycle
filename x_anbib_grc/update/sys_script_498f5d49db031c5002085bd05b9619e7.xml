<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>false</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_anbib_grc_m2m_entities_layer_controls</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition table="x_anbib_grc_m2m_entities_layer_controls">entity.status=2^EQ<item display_value="2" endquery="false" field="entity.status" goto="false" newquery="false" operator="=" or="false" value="2"/>
            <item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/>
        </filter_condition>
        <is_rest>false</is_rest>
        <message/>
        <name>Insert entity layers</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {

	// Add your code here
	var entity = current.entity.toString();
	var entityCategory = current.entity.mics_category.toString();
	var layer = current.layer_control.toString();	
	var layerName = current.layer_control.name.toString();
	var layerCategory = current.layer_control.entity_type.toString();
	
	// If layer type is different from entity type abort insert
	if (entityCategory != layerCategory) {
		current.setAbortAction(true);
	} else {
		// Get all layer templates
		var grLayerControlTpl = new GlideRecord("x_anbib_grc_m2m_control_temp_layer_contro");
		grLayerControlTpl.addQuery("layer_control", layer);
		grLayerControlTpl.query();
		while (grLayerControlTpl.next()) {
			var template = grLayerControlTpl.control_template.toString();

			// Verifica se jÃ¡ existe controle com template da mesma layer com outro tipo
			var grControl = new GlideRecord("x_anbib_grc_control");
			grControl.addQuery("entity", entity);
			grControl.addQuery("control", template);
			grControl.addQuery("layer.name", layerName);
			grControl.query();

			if (grControl.next()) {					
				// Se existir faz update de layer
				grControl.layer = layer;
				grControl.active = true;
				if (grControl.last_state.toString() != "") {
					grControl.state = grControl.last_state;
					grControl.last_state = "";
				} else {
					grControl.state = "10";
					new global.Workflow().restartWorkflow(grControl, false);
				}
				grControl.update();
			} else {					
				grControl.initialize();
				grControl.entity = entity;
				grControl.control = template;
				grControl.layer = layer;
				grControl.assigned_to = current.entity.itc_responsible;
				grControl.state = 0;

				var control_sys_id = grControl.insert();  // inserted control sys_id

				var grControlInsert = new GlideRecord('x_anbib_grc_control');
				grControlInsert.get(control_sys_id);      // inserted control record

				var wf = new global.Workflow();
				var inputs = {                            // Parametros para subflow
					u_record: entity
				};
				var wf_sys_id = wf.startFlow(gs.getProperty("x_anbib_grc.workflow_control"), grControlInsert, "insert", inputs);
			}
		}
	}

})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>nathalia.zago@alparservice.com.br</sys_created_by>
        <sys_created_on>2020-09-02 20:09:30</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>498f5d49db031c5002085bd05b9619e7</sys_id>
        <sys_mod_count>15</sys_mod_count>
        <sys_name>Insert entity layers</sys_name>
        <sys_overrides/>
        <sys_package display_value="GRC" source="x_anbib_grc">1a6d93de1b6d58504aae202a2d4bcbdc</sys_package>
        <sys_policy/>
        <sys_scope display_value="GRC">1a6d93de1b6d58504aae202a2d4bcbdc</sys_scope>
        <sys_update_name>sys_script_498f5d49db031c5002085bd05b9619e7</sys_update_name>
        <sys_updated_by>nathalia.zago@alparservice.com.br</sys_updated_by>
        <sys_updated_on>2020-09-30 14:31:15</sys_updated_on>
        <template/>
        <when>before</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=498f5d49db031c5002085bd05b9619e7"/>
</record_update>
